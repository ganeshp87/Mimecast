<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="PostCodesValidation" duration-ms="4060" started-at="2019-12-20T07:21:23Z" finished-at="2019-12-20T07:21:28Z">
    <groups>
    </groups>
    <test name="PostCodesValidation" duration-ms="4060" started-at="2019-12-20T07:21:23Z" finished-at="2019-12-20T07:21:28Z">
      <class name="com.mimecast.qa.api.PostCodes">
        <test-method status="PASS" signature="initSuite(java.lang.String)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="initSuite" is-config="true" duration-ms="28" started-at="2019-12-20T07:21:23Z" finished-at="2019-12-20T07:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSuite -->
        <test-method status="PASS" signature="test_PostCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.mimecast.qa.util.DataProviderIndex)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="test_PostCodes" duration-ms="1999" started-at="2019-12-20T07:21:24Z" data-provider="PostCodesAPI" finished-at="2019-12-20T07:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[?q=TW31SJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{
  "status": 200,
  "result": [
    {
      "postcode": "TW3 1SJ",
      "quality": 1,
      "eastings": 514664,
      "northings": 175853,
      "country": "England",
      "nhs_ha": "London",
      "longitude": -0.350555,
      "latitude": 51.470035,
      "european_electoral_region": "London",
      "primary_care_trust": "Hounslow",
      "region": "London",
      "lsoa": "Hounslow 015A",
      "msoa": "Hounslow 015",
      "incode": "1SJ",
      "outcode": "TW3",
      "parliamentary_constituency": "Brentford and Isleworth",
      "admin_district": "Hounslow",
      "parish": "Hounslow, unparished area",
      "admin_county": null,
      "admin_ward": "Hounslow Central",
      "ced": null,
      "ccg": "NHS Hounslow",
      "nuts": "Hounslow and Richmond upon Thames",
      "codes": {
        "admin_district": "E09000018",
        "admin_county": "E99999999",
        "admin_ward": "E05000358",
        "parish": "E43000208",
        "parliamentary_constituency": "E14000593",
        "ccg": "E38000084",
        "ced": "E99999999",
        "nuts": "UKI75"
      }
    }
  ]
}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[DataSetId: 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_PostCodes -->
        <test-method status="PASS" signature="test_PostCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.mimecast.qa.util.DataProviderIndex)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="test_PostCodes" duration-ms="116" started-at="2019-12-20T07:21:26Z" data-provider="PostCodesAPI" finished-at="2019-12-20T07:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[?q=A!234dfg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{
  "status": 200,
  "result": null
}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[DataSetId: 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_PostCodes -->
        <test-method status="PASS" signature="test_PostCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.mimecast.qa.util.DataProviderIndex)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="test_PostCodes" duration-ms="100" started-at="2019-12-20T07:21:26Z" data-provider="PostCodesAPI" finished-at="2019-12-20T07:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/TW31SJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{
  "status": 200,
  "result": {
    "postcode": "TW3 1SJ",
    "quality": 1,
    "eastings": 514664,
    "northings": 175853,
    "country": "England",
    "nhs_ha": "London",
    "longitude": -0.350555,
    "latitude": 51.470035,
    "european_electoral_region": "London",
    "primary_care_trust": "Hounslow",
    "region": "London",
    "lsoa": "Hounslow 015A",
    "msoa": "Hounslow 015",
    "incode": "1SJ",
    "outcode": "TW3",
    "parliamentary_constituency": "Brentford and Isleworth",
    "admin_district": "Hounslow",
    "parish": "Hounslow, unparished area",
    "admin_county": null,
    "admin_ward": "Hounslow Central",
    "ced": null,
    "ccg": "NHS Hounslow",
    "nuts": "Hounslow and Richmond upon Thames",
    "codes": {
      "admin_district": "E09000018",
      "admin_county": "E99999999",
      "admin_ward": "E05000358",
      "parish": "E43000208",
      "parliamentary_constituency": "E14000593",
      "ccg": "E38000084",
      "ced": "E99999999",
      "nuts": "UKI75"
    }
  }
}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[DataSetId: 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_PostCodes -->
        <test-method status="FAIL" signature="test_PostCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.mimecast.qa.util.DataProviderIndex)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="test_PostCodes" duration-ms="82" started-at="2019-12-20T07:21:26Z" data-provider="PostCodesAPI" finished-at="2019-12-20T07:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{
  "postcodes" : ["PR3 0SG", "M45 6GN", "EX165BL"]
}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[DataSetId: 4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.mimecast.qa.validations.PostCodeValidation.isAcutalVsExpectedIdentical(PostCodeValidation.java:59)
	at com.mimecast.qa.api.PostCodes.test_PostCodes(PostCodes.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_PostCodes -->
        <test-method status="FAIL" signature="test_PostCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.mimecast.qa.util.DataProviderIndex)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="test_PostCodes" duration-ms="94" started-at="2019-12-20T07:21:26Z" data-provider="PostCodesAPI" finished-at="2019-12-20T07:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/:TW3%201SJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{
  "status": 404,
  "error": "Invalid postcode"
}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[DataSetId: 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.mimecast.qa.validations.PostCodeValidation.isAcutalVsExpectedIdentical(PostCodeValidation.java:59)
	at com.mimecast.qa.api.PostCodes.test_PostCodes(PostCodes.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_PostCodes -->
        <test-method status="PASS" signature="test_PostAPI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.mimecast.qa.util.DataProviderIndex)[pri:0, instance:com.mimecast.qa.api.PostCodes@68c4039c]" name="test_PostAPI" duration-ms="847" started-at="2019-12-20T07:21:27Z" data-provider="PostAPI" finished-at="2019-12-20T07:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ["PR3 0SG", "M45 6GN", "EX165BL"]
]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{
    "status": 200,
    "result": [
        {
            "query": "PR3 0SG",
            "result": {
                "postcode": "PR3 0SG",
                "quality": 1,
                "eastings": 351012,
                "northings": 440302,
                "country": "England",
                "nhs_ha": "North West",
                "longitude": -2.746251,
                "latitude": 53.856635,
                "european_electoral_region": "North West",
                "primary_care_trust": "North Lancashire Teaching",
                "region": "North West",
                "lsoa": "Wyre 006A",
                "msoa": "Wyre 006",
                "incode": "0SG",
                "outcode": "PR3",
                "parliamentary_constituency": "Wyre and Preston North",
                "admin_district": "Wyre",
                "parish": "Myerscough and Bilsborrow",
                "admin_county": "Lancashire",
                "admin_ward": "Brock with Catterall",
                "ced": "Wyre Rural East",
                "ccg": "NHS Fylde and Wyre",
                "nuts": "Lancaster and Wyre",
                "codes": {
                    "admin_district": "E07000128",
                    "admin_county": "E10000017",
                    "admin_ward": "E05009934",
                    "parish": "E04005340",
                    "parliamentary_constituency": "E14001057",
                    "ccg": "E38000226",
                    "ced": "E58000832",
                    "nuts": "UKD44"
                }
            }
        },
        {
            "query": "M45 6GN",
            "result": {
                "postcode": "M45 6GN",
                "quality": 1,
                "eastings": 380416,
                "northings": 406002,
                "country": "England",
                "nhs_ha": "North West",
                "longitude": -2.297052,
                "latitude": 53.55028,
                "european_electoral_region": "North West",
                "primary_care_trust": "Bury",
                "region": "North West",
                "lsoa": "Bury 019C",
                "msoa": "Bury 019",
                "incode": "6GN",
                "outcode": "M45",
                "parliamentary_constituency": "Bury South",
                "admin_district": "Bury",
                "parish": "Bury, unparished area",
                "admin_county": null,
                "admin_ward": "Pilkington Park",
                "ced": null,
                "ccg": "NHS Bury",
                "nuts": "Greater Manchester North East",
                "codes": {
                    "admin_district": "E08000002",
                    "admin_county": "E99999999",
                    "admin_ward": "E05000677",
                    "parish": "E43000156",
                    "parliamentary_constituency": "E14000612",
                    "ccg": "E38000024",
                    "ced": "E99999999",
                    "nuts": "UKD37"
                }
            }
        },
        {
            "query": "EX165BL",
            "result": {
                "postcode": "EX16 5BL",
                "quality": 1,
                "eastings": 294478,
                "northings": 112252,
                "country": "England",
                "nhs_ha": "South West",
                "longitude": -3.50197,
                "latitude": 50.900064,
                "european_electoral_region": "South West",
                "primary_care_trust": "Devon",
                "region": "South West",
                "lsoa": "Mid Devon 005C",
                "msoa": "Mid Devon 005",
                "incode": "5BL",
                "outcode": "EX16",
                "parliamentary_constituency": "Tiverton and Honiton",
                "admin_district": "Mid Devon",
                "parish": "Tiverton",
                "admin_county": "Devon",
                "admin_ward": "Westexe",
                "ced": "Tiverton West",
                "ccg": "NHS Devon",
                "nuts": "Devon CC",
                "codes": {
                    "admin_district": "E07000042",
                    "admin_county": "E10000008",
                    "admin_ward": "E05003531",
                    "parish": "E04003055",
                    "parliamentary_constituency": "E14000996",
                    "ccg": "E38000230",
                    "ced": "E58000304",
                    "nuts": "UKK43"
                }
            }
        }
    ]
}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[DataSetId: 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_PostAPI -->
      </class> <!-- com.mimecast.qa.api.PostCodes -->
    </test> <!-- PostCodesValidation -->
  </suite> <!-- PostCodesValidation -->
</testng-results>
